{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "err",
          "type": "string"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "LogAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "value",
          "type": "address[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "value",
          "type": "bool[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "value",
          "type": "bytes32[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "value",
          "type": "int256[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "value",
          "type": "string[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        }
      ],
      "name": "LogArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "LogBytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "name": "LogBytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "value",
          "type": "int256"
        }
      ],
      "name": "LogInt256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "value",
          "type": "address"
        }
      ],
      "name": "LogNamedAddress",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "value",
          "type": "address[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool[]",
          "name": "value",
          "type": "bool[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "value",
          "type": "bytes32[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "value",
          "type": "int256[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "value",
          "type": "string[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "value",
          "type": "uint256[]"
        }
      ],
      "name": "LogNamedArray",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "value",
          "type": "bytes"
        }
      ],
      "name": "LogNamedBytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "value",
          "type": "bytes32"
        }
      ],
      "name": "LogNamedBytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "value",
          "type": "int256"
        }
      ],
      "name": "LogNamedInt256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "LogNamedString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LogNamedUint256",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        }
      ],
      "name": "LogString",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "LogUint256",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061025c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ba414fa61461003b578063fa7626d414610057575b600080fd5b61004361005f565b604051901515815260200160405180910390f35b610043600181565b6000805460ff16156100715750600190565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156101af5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091610114917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016101e5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261014c91610221565b6000604051808303816000865af19150503d8060008114610189576040519150601f19603f3d011682016040523d82523d6000602084013e61018e565b606091505b509150506000818060200190518101906101a8919061022d565b9392505050565b50600090565b6000815160005b818110156101d657602081850181015186830152016101bc565b50600093019283525090919050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600061021960048301846101b5565b949350505050565b60006101a882846101b5565b60006020828403121561023f57600080fd5b815180151581146101a857600080fdfea164736f6c6343000811000a",
    "sourceMap": "201:269:17:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063ba414fa61461003b578063fa7626d414610057575b600080fd5b61004361005f565b604051901515815260200160405180910390f35b610043600181565b6000805460ff16156100715750600190565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156101af5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091610114917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016101e5565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261014c91610221565b6000604051808303816000865af19150503d8060008114610189576040519150601f19603f3d011682016040523d82523d6000602084013e61018e565b606091505b509150506000818060200190518101906101a8919061022d565b9392505050565b50600090565b6000815160005b818110156101d657602081850181015186830152016101bc565b50600093019283525090919050565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600061021960048301846101b5565b949350505050565b60006101a882846101b5565b60006020828403121561023f57600080fd5b815180151581146101a857600080fdfea164736f6c6343000811000a",
    "sourceMap": "201:269:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3399:628:12;;;:::i;:::-;;;179:14:23;;172:22;154:41;;142:2;127:18;3399:628:12;;;;;;;2046:35;;2077:4;2046:35;;3399:628;3433:4;3453:7;;;;3449:49;;;-1:-1:-1;3483:4:12;;3399:628::o;3449:49::-;2634:64;3584:24;:28;3580:441;;3795:43;;;2634:64;3795:43;;;380:74:23;;;3820:17:12;470:18:23;;;463:34;3795:43:12;;;;;;;;;353:18:23;;;3795:43:12;;;-1:-1:-1;;2634:64:12;;3693:163;;3738:34;;3693:163;;;:::i;:::-;;;;;;;;;;;;;;;3658:212;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3628:242;;;3884:17;3915:10;3904:30;;;;;;;;;;;;:::i;:::-;3884:50;3399:628;-1:-1:-1;;;3399:628:12:o;3580:441::-;-1:-1:-1;4005:5:12;;3399:628::o;508:322:23:-;549:3;587:5;581:12;611:1;621:128;635:6;632:1;629:13;621:128;;;732:4;717:13;;;713:24;;707:31;694:11;;;687:52;650:12;621:128;;;-1:-1:-1;804:1:23;768:16;;793:13;;;-1:-1:-1;768:16:23;;508:322;-1:-1:-1;508:322:23:o;835:324::-;1032:66;1024:6;1020:79;1015:3;1008:92;990:3;1116:37;1150:1;1145:3;1141:11;1133:6;1116:37;:::i;:::-;1109:44;835:324;-1:-1:-1;;;;835:324:23:o;1164:189::-;1293:3;1318:29;1343:3;1335:6;1318:29;:::i;1358:277::-;1425:6;1478:2;1466:9;1457:7;1453:23;1449:32;1446:52;;;1494:1;1491;1484:12;1446:52;1526:9;1520:16;1579:5;1572:13;1565:21;1558:5;1555:32;1545:60;;1601:1;1598;1591:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"err\",\"type\":\"string\"}],\"name\":\"Log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"LogAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"name\":\"LogArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"LogBytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"LogBytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"LogInt256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"value\",\"type\":\"address\"}],\"name\":\"LogNamedAddress\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"value\",\"type\":\"address[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool[]\",\"name\":\"value\",\"type\":\"bool[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32[]\",\"name\":\"value\",\"type\":\"bytes32[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"value\",\"type\":\"int256[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"value\",\"type\":\"string[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"value\",\"type\":\"uint256[]\"}],\"name\":\"LogNamedArray\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"value\",\"type\":\"bytes\"}],\"name\":\"LogNamedBytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"}],\"name\":\"LogNamedBytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"LogNamedInt256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"LogNamedString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogNamedUint256\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"}],\"name\":\"LogString\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogUint256\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"failed()\":{\"details\":\"Checks whether any test has failed so far. In addition to the local failure flag, we look for the global flag in the HEVM contract at storage slot \\\"faled\\\", because it is possible to run assertions between different instances of PRBTest. See https://github.com/dapphub/dapptools/issues/768.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/test/Assertions.sol\":\"Assertions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":10000},\"remappings\":[\":@prb/test/=lib/prb-test/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":prb-test/=lib/prb-test/src/\"]},\"sources\":{\"lib/prb-test/src/Helpers.sol\":{\"keccak256\":\"0xe61e6fc932e1b9abf260f37836093b685ba20cb1f25a28ea2afd14ce4c14588d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28a35d16dec596080afaa239516dbf787caaf1628c6908d939d7b0bf8c21b645\",\"dweb:/ipfs/QmUytXHU1cBoxtXtAgnFA85gLHLNd9y5DRCErSEJHwWDbE\"]},\"lib/prb-test/src/PRBTest.sol\":{\"keccak256\":\"0xaa82d9a58f9d61f01030d5379986299923a34a5392c38ae456b52cf34ab2a17d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://89a74c46077dc8b217b0aba50b6dde36affa293893163f7f690d600f70856703\",\"dweb:/ipfs/QmNqfim2yAgLR2dPQDQSnjwXC6rZXUTHxTexdq8NyRqnCs\"]},\"lib/prb-test/src/Vm.sol\":{\"keccak256\":\"0x8187883bc217a7679d70980a8f254edeedf48500bfc97fc62ae61e8dda84f99a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63c3531db5496819a24b3702eed6958cb608833c3e99c03d64719d841e8a9399\",\"dweb:/ipfs/QmZpb6ccWuacpBfURfGF9qpvYMPVYJ9tsWgCGpgxCFZfLp\"]},\"src/Helpers.sol\":{\"keccak256\":\"0x1461025bd426e117b6e6b14bbb57e618b1bc5792f26fce0d7901ffc734c804ef\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d66505f15e3daa16740813ab9c91fb866b5363057a345cb8f5a02fe310999c07\",\"dweb:/ipfs/QmTf6ma5w4VzsoymbK6XwGbs8JkbrQ4ap5JRzLLZgHz1cW\"]},\"src/SD59x18.sol\":{\"keccak256\":\"0x1b96c21e930e4087b8c82ab3402a7ae66779ae11a5977120b34b136095a738de\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://0598bd4d13715403826ea4d8819b03e5027fc24b14096dea04fdc02f9254ed86\",\"dweb:/ipfs/QmRH7ZrnMTuawE5WZa8oo91qYDS3ovf3G4ekJZhRQmXRBT\"]},\"src/UD60x18.sol\":{\"keccak256\":\"0x2d713cd2492e85cb164c36cbc65a74d36b024145cdf91340b951bca4ea5123a7\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://dc7d9fb116696254524a26e5ea943efebdefdf3a8306e4f120fc3d7c83f0a18c\",\"dweb:/ipfs/QmTRZfuBbC8Bcxqbb6JKyRpYVsF3TcxB93Rv1wqngTunDC\"]},\"src/test/Assertions.sol\":{\"keccak256\":\"0x35f28f1bf3d8cac456c1110898a6626fef72cc919620cba7dc7c92301c223ec1\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://27968b9ea6ecfb2651ce6442ed0e7809b516ef7d86fea1d74001865335748a6f\",\"dweb:/ipfs/QmWJq9Dyfpm6GgxWijF6pXkiULSpA4Q66Ja77cW4aRLkHA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "err",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "value",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "value",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bool[]",
              "name": "value",
              "type": "bool[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32[]",
              "name": "value",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "value",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string[]",
              "name": "value",
              "type": "string[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogBytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "value",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogBytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "value",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogInt256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "value",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedAddress",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "value",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bool[]",
              "name": "value",
              "type": "bool[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32[]",
              "name": "value",
              "type": "bytes32[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "value",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string[]",
              "name": "value",
              "type": "string[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "value",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedArray",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "value",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedBytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "value",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedBytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "value",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedInt256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedString",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogNamedUint256",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "value",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogString",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LogUint256",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "failed()": {
            "details": "Checks whether any test has failed so far. In addition to the local failure flag, we look for the global flag in the HEVM contract at storage slot \"faled\", because it is possible to run assertions between different instances of PRBTest. See https://github.com/dapphub/dapptools/issues/768."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@prb/test/=lib/prb-test/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":prb-test/=lib/prb-test/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 10000
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/test/Assertions.sol": "Assertions"
      },
      "libraries": {}
    },
    "sources": {
      "lib/prb-test/src/Helpers.sol": {
        "keccak256": "0xe61e6fc932e1b9abf260f37836093b685ba20cb1f25a28ea2afd14ce4c14588d",
        "urls": [
          "bzz-raw://28a35d16dec596080afaa239516dbf787caaf1628c6908d939d7b0bf8c21b645",
          "dweb:/ipfs/QmUytXHU1cBoxtXtAgnFA85gLHLNd9y5DRCErSEJHwWDbE"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/PRBTest.sol": {
        "keccak256": "0xaa82d9a58f9d61f01030d5379986299923a34a5392c38ae456b52cf34ab2a17d",
        "urls": [
          "bzz-raw://89a74c46077dc8b217b0aba50b6dde36affa293893163f7f690d600f70856703",
          "dweb:/ipfs/QmNqfim2yAgLR2dPQDQSnjwXC6rZXUTHxTexdq8NyRqnCs"
        ],
        "license": "MIT"
      },
      "lib/prb-test/src/Vm.sol": {
        "keccak256": "0x8187883bc217a7679d70980a8f254edeedf48500bfc97fc62ae61e8dda84f99a",
        "urls": [
          "bzz-raw://63c3531db5496819a24b3702eed6958cb608833c3e99c03d64719d841e8a9399",
          "dweb:/ipfs/QmZpb6ccWuacpBfURfGF9qpvYMPVYJ9tsWgCGpgxCFZfLp"
        ],
        "license": "MIT"
      },
      "src/Helpers.sol": {
        "keccak256": "0x1461025bd426e117b6e6b14bbb57e618b1bc5792f26fce0d7901ffc734c804ef",
        "urls": [
          "bzz-raw://d66505f15e3daa16740813ab9c91fb866b5363057a345cb8f5a02fe310999c07",
          "dweb:/ipfs/QmTf6ma5w4VzsoymbK6XwGbs8JkbrQ4ap5JRzLLZgHz1cW"
        ],
        "license": "Unlicense"
      },
      "src/SD59x18.sol": {
        "keccak256": "0x1b96c21e930e4087b8c82ab3402a7ae66779ae11a5977120b34b136095a738de",
        "urls": [
          "bzz-raw://0598bd4d13715403826ea4d8819b03e5027fc24b14096dea04fdc02f9254ed86",
          "dweb:/ipfs/QmRH7ZrnMTuawE5WZa8oo91qYDS3ovf3G4ekJZhRQmXRBT"
        ],
        "license": "Unlicense"
      },
      "src/UD60x18.sol": {
        "keccak256": "0x2d713cd2492e85cb164c36cbc65a74d36b024145cdf91340b951bca4ea5123a7",
        "urls": [
          "bzz-raw://dc7d9fb116696254524a26e5ea943efebdefdf3a8306e4f120fc3d7c83f0a18c",
          "dweb:/ipfs/QmTRZfuBbC8Bcxqbb6JKyRpYVsF3TcxB93Rv1wqngTunDC"
        ],
        "license": "Unlicense"
      },
      "src/test/Assertions.sol": {
        "keccak256": "0x35f28f1bf3d8cac456c1110898a6626fef72cc919620cba7dc7c92301c223ec1",
        "urls": [
          "bzz-raw://27968b9ea6ecfb2651ce6442ed0e7809b516ef7d86fea1d74001865335748a6f",
          "dweb:/ipfs/QmWJq9Dyfpm6GgxWijF6pXkiULSpA4Q66Ja77cW4aRLkHA"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/test/Assertions.sol",
    "id": 31592,
    "exportedSymbols": {
      "Assertions": [
        31591
      ],
      "PRBTest": [
        25708
      ],
      "SD59x18": [
        28159
      ],
      "UD60x18": [
        30152
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:432:17",
    "nodes": [
      {
        "id": 31540,
        "nodeType": "PragmaDirective",
        "src": "39:25:17",
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 31542,
        "nodeType": "ImportDirective",
        "src": "66:48:17",
        "absolutePath": "lib/prb-test/src/PRBTest.sol",
        "file": "@prb/test/PRBTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31592,
        "sourceUnit": 25709,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31541,
              "name": "PRBTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25708,
              "src": "75:7:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31544,
        "nodeType": "ImportDirective",
        "src": "116:41:17",
        "absolutePath": "src/SD59x18.sol",
        "file": "../SD59x18.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31592,
        "sourceUnit": 30143,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31543,
              "name": "SD59x18",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28159,
              "src": "125:7:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31546,
        "nodeType": "ImportDirective",
        "src": "158:41:17",
        "absolutePath": "src/UD60x18.sol",
        "file": "../UD60x18.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 31592,
        "sourceUnit": 31539,
        "symbolAliases": [
          {
            "foreign": {
              "id": 31545,
              "name": "UD60x18",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30152,
              "src": "167:7:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 31591,
        "nodeType": "ContractDefinition",
        "src": "201:269:17",
        "nodes": [
          {
            "id": 31569,
            "nodeType": "FunctionDefinition",
            "src": "238:112:17",
            "body": {
              "id": 31568,
              "nodeType": "Block",
              "src": "287:63:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31560,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31551,
                            "src": "321:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_SD59x18_$28159",
                              "typeString": "SD59x18"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_SD59x18_$28159",
                              "typeString": "SD59x18"
                            }
                          ],
                          "expression": {
                            "id": 31558,
                            "name": "SD59x18",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28159,
                            "src": "306:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_SD59x18_$28159_$",
                              "typeString": "type(SD59x18)"
                            }
                          },
                          "id": 31559,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "314:6:17",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "306:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_SD59x18_$28159_$returns$_t_int256_$",
                            "typeString": "function (SD59x18) pure returns (int256)"
                          }
                        },
                        "id": 31561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "306:17:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31564,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31554,
                            "src": "340:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_SD59x18_$28159",
                              "typeString": "SD59x18"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_SD59x18_$28159",
                              "typeString": "SD59x18"
                            }
                          ],
                          "expression": {
                            "id": 31562,
                            "name": "SD59x18",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 28159,
                            "src": "325:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_SD59x18_$28159_$",
                              "typeString": "type(SD59x18)"
                            }
                          },
                          "id": 31563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "333:6:17",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "325:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_SD59x18_$28159_$returns$_t_int256_$",
                            "typeString": "function (SD59x18) pure returns (int256)"
                          }
                        },
                        "id": 31565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "325:17:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "id": 31557,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31569,
                        31590,
                        23195,
                        23221,
                        23264,
                        23302,
                        23339,
                        23365,
                        23400,
                        23430,
                        23463,
                        23491,
                        23522,
                        23548,
                        23583,
                        23613,
                        23644,
                        23670,
                        23705,
                        23735,
                        23768,
                        23796,
                        23831,
                        23861,
                        23892,
                        23918,
                        23953,
                        23983
                      ],
                      "referencedDeclaration": 23644,
                      "src": "297:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_int256_$_t_int256_$returns$__$",
                        "typeString": "function (int256,int256)"
                      }
                    },
                    "id": 31566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "297:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31567,
                  "nodeType": "ExpressionStatement",
                  "src": "297:46:17"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertEq",
            "nameLocation": "247:8:17",
            "parameters": {
              "id": 31555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31551,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "264:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 31569,
                  "src": "256:9:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_SD59x18_$28159",
                    "typeString": "SD59x18"
                  },
                  "typeName": {
                    "id": 31550,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31549,
                      "name": "SD59x18",
                      "nameLocations": [
                        "256:7:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28159,
                      "src": "256:7:17"
                    },
                    "referencedDeclaration": 28159,
                    "src": "256:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_SD59x18_$28159",
                      "typeString": "SD59x18"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31554,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "275:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 31569,
                  "src": "267:9:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_SD59x18_$28159",
                    "typeString": "SD59x18"
                  },
                  "typeName": {
                    "id": 31553,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31552,
                      "name": "SD59x18",
                      "nameLocations": [
                        "267:7:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 28159,
                      "src": "267:7:17"
                    },
                    "referencedDeclaration": 28159,
                    "src": "267:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_SD59x18_$28159",
                      "typeString": "SD59x18"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "255:22:17"
            },
            "returnParameters": {
              "id": 31556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "287:0:17"
            },
            "scope": 31591,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 31590,
            "nodeType": "FunctionDefinition",
            "src": "356:112:17",
            "body": {
              "id": 31589,
              "nodeType": "Block",
              "src": "405:63:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 31581,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31572,
                            "src": "439:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_UD60x18_$30152",
                              "typeString": "UD60x18"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_UD60x18_$30152",
                              "typeString": "UD60x18"
                            }
                          ],
                          "expression": {
                            "id": 31579,
                            "name": "UD60x18",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30152,
                            "src": "424:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_UD60x18_$30152_$",
                              "typeString": "type(UD60x18)"
                            }
                          },
                          "id": 31580,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "432:6:17",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "424:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_UD60x18_$30152_$returns$_t_uint256_$",
                            "typeString": "function (UD60x18) pure returns (uint256)"
                          }
                        },
                        "id": 31582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "424:17:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 31585,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31575,
                            "src": "458:1:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_userDefinedValueType$_UD60x18_$30152",
                              "typeString": "UD60x18"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_userDefinedValueType$_UD60x18_$30152",
                              "typeString": "UD60x18"
                            }
                          ],
                          "expression": {
                            "id": 31583,
                            "name": "UD60x18",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30152,
                            "src": "443:7:17",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_userDefinedValueType$_UD60x18_$30152_$",
                              "typeString": "type(UD60x18)"
                            }
                          },
                          "id": 31584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "451:6:17",
                          "memberName": "unwrap",
                          "nodeType": "MemberAccess",
                          "src": "443:14:17",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_unwrap_pure$_t_userDefinedValueType$_UD60x18_$30152_$returns$_t_uint256_$",
                            "typeString": "function (UD60x18) pure returns (uint256)"
                          }
                        },
                        "id": 31586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "443:17:17",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 31578,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        31569,
                        31590,
                        23195,
                        23221,
                        23264,
                        23302,
                        23339,
                        23365,
                        23400,
                        23430,
                        23463,
                        23491,
                        23522,
                        23548,
                        23583,
                        23613,
                        23644,
                        23670,
                        23705,
                        23735,
                        23768,
                        23796,
                        23831,
                        23861,
                        23892,
                        23918,
                        23953,
                        23983
                      ],
                      "referencedDeclaration": 23892,
                      "src": "415:8:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 31587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "415:46:17",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31588,
                  "nodeType": "ExpressionStatement",
                  "src": "415:46:17"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertEq",
            "nameLocation": "365:8:17",
            "parameters": {
              "id": 31576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31572,
                  "mutability": "mutable",
                  "name": "a",
                  "nameLocation": "382:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 31590,
                  "src": "374:9:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_UD60x18_$30152",
                    "typeString": "UD60x18"
                  },
                  "typeName": {
                    "id": 31571,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31570,
                      "name": "UD60x18",
                      "nameLocations": [
                        "374:7:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30152,
                      "src": "374:7:17"
                    },
                    "referencedDeclaration": 30152,
                    "src": "374:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_UD60x18_$30152",
                      "typeString": "UD60x18"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 31575,
                  "mutability": "mutable",
                  "name": "b",
                  "nameLocation": "393:1:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 31590,
                  "src": "385:9:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_UD60x18_$30152",
                    "typeString": "UD60x18"
                  },
                  "typeName": {
                    "id": 31574,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 31573,
                      "name": "UD60x18",
                      "nameLocations": [
                        "385:7:17"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30152,
                      "src": "385:7:17"
                    },
                    "referencedDeclaration": 30152,
                    "src": "385:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_UD60x18_$30152",
                      "typeString": "UD60x18"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "373:22:17"
            },
            "returnParameters": {
              "id": 31577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "405:0:17"
            },
            "scope": 31591,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 31547,
              "name": "PRBTest",
              "nameLocations": [
                "224:7:17"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 25708,
              "src": "224:7:17"
            },
            "id": 31548,
            "nodeType": "InheritanceSpecifier",
            "src": "224:7:17"
          }
        ],
        "canonicalName": "Assertions",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          31591,
          25708
        ],
        "name": "Assertions",
        "nameLocation": "210:10:17",
        "scope": 31592,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 17
}